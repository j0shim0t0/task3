{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work7\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ModeSelector from './ModeSelector/ModeSelector'; //import { readTextFile } from './json/script.js'\n\nfunction readTextFile(file, callback) {\n  var rawFile = new XMLHttpRequest();\n  rawFile.overrideMimeType(\"application/json\");\n  rawFile.open(\"GET\", file, true);\n\n  rawFile.onreadystatechange = function () {\n    if (rawFile.readyState === 4 && rawFile.status == \"200\") {\n      debugger;\n      callback(rawFile.responseText);\n    }\n  };\n\n  rawFile.send(null);\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false\n    };\n\n    this.modeSelectHandler = url => {\n      // console.log(url)\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n  }\n\n  async fetchData(url) {\n    //const response = await fetch(url)\n    //const data = await response.json()\n    readTextFile('json/jsonMessages1.json', function (text) {\n      debugger;\n      var data = JSON.parse(text);\n      console.log(data);\n    });\n    /*this.setState({\n      \tisLoading: false,\n      \tdata: data\n    })*/\n  }\n\n  render() {\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(ModeSelector, {\n        onSelect: this.modeSelectHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, \"MyApp\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work7/my-app/src/App.js"],"names":["React","Component","ModeSelector","readTextFile","file","callback","rawFile","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","responseText","send","App","state","isModeSelected","isLoading","modeSelectHandler","url","setState","fetchData","text","data","JSON","parse","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CACA;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AAClC,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,EAAAA,OAAO,CAACE,gBAAR,CAAyB,kBAAzB;AACAF,EAAAA,OAAO,CAACG,IAAR,CAAa,KAAb,EAAoBL,IAApB,EAA0B,IAA1B;;AACAE,EAAAA,OAAO,CAACI,kBAAR,GAA6B,YAAW;AACpC,QAAIJ,OAAO,CAACK,UAAR,KAAuB,CAAvB,IAA4BL,OAAO,CAACM,MAAR,IAAkB,KAAlD,EAAyD;AACxD;AACGP,MAAAA,QAAQ,CAACC,OAAO,CAACO,YAAT,CAAR;AACH;AACJ,GALD;;AAMAP,EAAAA,OAAO,CAACQ,IAAR,CAAa,IAAb;AACH;;AAED,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE3Be,KAF2B,GAEnB;AACPC,MAAAA,cAAc,EAAE,KADT;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAFmB;;AAAA,SAqB3BC,iBArB2B,GAqBPC,GAAG,IAAI;AACvB;AACA,WAAKC,QAAL,CAAc;AACXJ,QAAAA,cAAc,EAAE,IADL;AAEXC,QAAAA,SAAS,EAAE;AAFA,OAAd;AAIA,WAAKI,SAAL,CAAeF,GAAf;AACH,KA5B0B;AAAA;;AAO3B,QAAME,SAAN,CAAgBF,GAAhB,EAAqB;AACjB;AACA;AACAjB,IAAAA,YAAY,CAAC,yBAAD,EAA4B,UAASoB,IAAT,EAAc;AACrD;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,KAJW,CAAZ;AAKA;;;;AAIH;;AAWDK,EAAAA,MAAM,GAAE;AAEP,QAAG,CAAC,KAAKb,KAAL,CAAWC,cAAf,EAA8B;AAC1B,0BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,KAAKE,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADD;AAKA;;AAEJ,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAKA;;AA7C0B;;AAgD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ModeSelector from './ModeSelector/ModeSelector';\n//import { readTextFile } from './json/script.js'\n\nfunction readTextFile(file, callback) {\n    var rawFile = new XMLHttpRequest();\n    rawFile.overrideMimeType(\"application/json\");\n    rawFile.open(\"GET\", file, true);\n    rawFile.onreadystatechange = function() {\n        if (rawFile.readyState === 4 && rawFile.status == \"200\") {\n        \tdebugger\n            callback(rawFile.responseText);\n        }\n    }\n    rawFile.send(null);\n}\n\nclass App extends Component {\n\n\tstate = {\n\t\tisModeSelected: false,\n    \tisLoading: false\n\t}\n\n\tasync fetchData(url) {\n\t    //const response = await fetch(url)\n\t    //const data = await response.json()\n\t    readTextFile('json/jsonMessages1.json', function(text){\n\t    \tdebugger\n\t    \tvar data = JSON.parse(text);\n    \t\tconsole.log(data);\n\t    })\n\t    /*this.setState({\n\t      \tisLoading: false,\n\t      \tdata: data\n\t    })*/\n\t}\n\n\tmodeSelectHandler = url => {\n\t    // console.log(url)\n\t    this.setState({\n\t      \tisModeSelected: true,\n\t      \tisLoading: true,\n\t    })\n\t    this.fetchData(url)\n\t}\n\n\trender(){\n\n\t\tif(!this.state.isModeSelected){\n\t    \treturn (\n\t    \t\t<div className=\"container\">\n\t        \t\t<ModeSelector onSelect={this.modeSelectHandler} />\n\t        \t</div>\n\t      \t)\n\t    }\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\tMyApp\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}